<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>wan.dianjie</groupId>
  <artifactId>wandj</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>wandj</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <java.version>1.8</java.version>
    <elasticsearch.version>6.2.2</elasticsearch.version>
    <quartz.version>2.2.3</quartz.version>

  </properties>

  <dependencies>
    <!--redis-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
    </dependency>

    <!--用来渲染页面 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!--集成日志框架-->
    <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring‐boot‐starter‐logging</artifactId>-->
    <!--</dependency>-->
    <!--lombok-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Druid Pool -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>1.1.9</version>
    </dependency>
    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-boot-starter</artifactId>
      <version>3.1.0</version>
    </dependency>

    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-extension</artifactId>
      <version>3.1.0</version>
    </dependency>
    <!-- email-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-freemarker</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <!-- 配置spring boot 热部署 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
      <scope>true</scope>
    </dependency>
    <!--kafka-->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <!--添加lang3包-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.6</version>
    </dependency>
    <!--httpclient-->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.13</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <!--oauth2-->
    <!-- springboot2.0已经将oauth2.0与security整合在一起 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
      <version>2.3.6.RELEASE</version>
  </dependency>
    <!--<dependency>-->
      <!--<groupId>com.vaadin.external.google</groupId>-->
      <!--<artifactId>android-json</artifactId>-->
      <!--<version>0.0.20131108.vaadin1</version>-->
      <!--<scope>compile</scope>-->
    <!--</dependency>-->

    <!--spring boot2 使用guava EventBus https://www.jianshu.com/p/4efbfdc01cf6-->
    <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
    <!--<dependency>-->
      <!--<groupId>com.google.guava</groupId>-->
      <!--<artifactId>guava</artifactId>-->
      <!--<version>20.0</version>-->
    <!--</dependency>-->
    <!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.apache.curator</groupId>-->
      <!--<artifactId>curator-client</artifactId>-->
      <!--<version>2.12.0</version>-->
    <!--</dependency>-->
    <!--spring boot 使用缓存cache-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <!-- AOP依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.59</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-all</artifactId>
      <version>4.6.4</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.elasticsearch.plugin</groupId>-->
      <!--<artifactId>transport-netty4-client</artifactId>-->
      <!--<version>6.2.2</version>-->
    <!--</dependency>-->

    <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch -->
    <!--<dependency>-->
      <!--<groupId>org.springframework.data</groupId>-->
      <!--<artifactId>spring-data-elasticsearch</artifactId>-->
      <!--<version>3.1.10.RELEASE</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
      <!--<groupId>org.elasticsearch</groupId>-->
      <!--<artifactId>elasticsearch</artifactId>-->
      <!--<version>6.2.2</version>-->
    <!--</dependency>-->
    <!--quartz-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>

    <!--quartz相关依赖-->
    <!--<dependency>-->
      <!--<groupId>org.quartz-scheduler</groupId>-->
      <!--<artifactId>quartz</artifactId>-->
      <!--<version>${quartz.version}</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>org.quartz-scheduler</groupId>-->
      <!--<artifactId>quartz-jobs</artifactId>-->
      <!--<version>${quartz.version}</version>-->
    <!--</dependency>-->
    <!--分页插件-->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>5.0.0</version>
    </dependency>

    <!--集成activiti-->
    <!--<dependency>-->
      <!--<groupId>org.activiti</groupId>-->
      <!--<artifactId>activiti-spring-boot-starter</artifactId>-->
      <!--<version>7.1.64</version>-->
    <!--</dependency>-->
    <!-- activiti -->
<!--    <dependency>-->
<!--      <groupId>org.activiti</groupId>-->
<!--      <artifactId>activiti-spring-boot-starter-basic</artifactId>-->
<!--      <version>6.0.0</version>-->
<!--    </dependency>-->

    <!--此方式对代码侵入性较高，需要在接口调用的地方通过try-catch风格的API对代码进行包装：-->
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-core</artifactId>
      <version>1.7.0</version>
    </dependency>
     <!--上述通过try-catch风格的API可以实现限流，但是对代码侵入性太高，推荐使用注解的方式来实现。下文若不做注明，默认都会采用注解的方式实现。-->
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-annotation-aspectj</artifactId>
      <version>1.7.0</version>
    </dependency>
    <!--接入控制台 -Dproject.name=sentinel-demo -Dcsp.sentinel.dashboard.server=127.0.0.1:8080 -Dcsp.sentinel.api.port=8719 -->
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-transport-simple-http</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-datasource-redis</artifactId>
      <version>1.7.0</version>
    </dependency>

   </dependencies>


<!---->
  <build>
    <plugins><!---->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
